from dataclasses import dataclass

from sportgems import find_gems

import pytest


@dataclass
class Track:
    times: list
    coordinates: list


@pytest.fixture
def track():
    
    track = Track(times=[], coordinates=[])
    start_coordinate = (48.0, 8.0)
    # insert a section with 0.001 degree per second
    for i in range(100):
        next_coordinate = (start_coordinate[0], start_coordinate[1] + i * 0.0002)
        track.coordinates.append(next_coordinate)
    # insert a section with 0.003 degree per second which is slightly faster
    last_coordinate = track.coordinates[-1]
    for i in range(100):
        next_coordinate = (last_coordinate[0], last_coordinate[1] + i * 0.00025)
        track.coordinates.append(next_coordinate)
    last_coordinate = track.coordinates[-1]
    # insert a section with again 0.001 degree per second
    for i in range(100):
        next_coordinate = (last_coordinate[0], last_coordinate[1] + i * 0.0002)
        track.coordinates.append(next_coordinate)
    for i in range(len(track.coordinates)):
        track.times.append(i)
    assert len(track.times) == len(track.coordinates)
    return track


def test_find_gems__dummy_track(track):
    # search for the fastest 1km (=1000m) with the above created track
    result = find_gems(1000, track.times, track.coordinates)
    found_section = result[0]
    start_index = result[1]
    end_index = result[2]
    velocity_found = result[3]
    assert found_section is True
    assert start_index == 131
    assert end_index == 184
    assert int(velocity_found) == 18


def test_find_gems__real_track():
    coordinates = [(8.687453, 49.405446), (8.687267, 49.405557), (8.687035, 49.405841), (8.686783, 49.405843), (8.686582, 49.405832), (8.686339, 49.405808), (8.686138, 49.405802), (8.686004, 49.405719), (8.686108, 49.405781), (8.68604, 49.405953), (8.686021, 49.406056), (8.685866, 49.406175), (8.685838, 49.406318), (8.685842, 49.406504), (8.685754, 49.406647), (8.685638, 49.406745), (8.685489, 49.406741), (8.685291, 49.406754), (8.685108, 49.406685), (8.684909, 49.406704), (8.684758, 49.406781), (8.684684, 49.406925), (8.684605, 49.407066), (8.684523, 49.407224), (8.684983, 49.407253), (8.685173, 49.407321), (8.685484, 49.407392), (8.685594, 49.407472), (8.685677, 49.407594), (8.68578, 49.407725), (8.685921, 49.407676), (8.68615, 49.407627), (8.686382, 49.407718), (8.686366, 49.407816), (8.68642, 49.40793), (8.686611, 49.408001), (8.686864, 49.408009), (8.687103, 49.407985), (8.687342, 49.407972), (8.687551, 49.407969), (8.687706, 49.408059), (8.687872, 49.408186), (8.687751, 49.408509), (8.687667, 49.408769), (8.68755, 49.40897), (8.687535, 49.40916), (8.687593, 49.409317), (8.687443, 49.409435), (8.687384, 49.409537), (8.687364, 49.409637), (8.685127, 49.409952), (8.684856, 49.409909), (8.68457, 49.410133), (8.684313, 49.410158), (8.683942, 49.409937), (8.683781, 49.409814), (8.68138, 49.40992), (8.681599, 49.409954), (8.681338, 49.409979), (8.680975, 49.409974), (8.680676, 49.409984), (8.680557, 49.409908), (8.680329, 49.409892), (8.680104, 49.409901), (8.679915, 49.409873), (8.679699, 49.409867), (8.679556, 49.409761), (8.679286, 49.409685), (8.679087, 49.409638), (8.678931, 49.409615), (8.678781, 49.409601), (8.6786, 49.409592), (8.678377, 49.409608), (8.67812, 49.409591), (8.677935, 49.40952), (8.677785, 49.409422), (8.677566, 49.409334), (8.676962, 49.409544), (8.676865, 49.409693), (8.676787, 49.409848), (8.676799, 49.409939), (8.676821, 49.41005), (8.676833, 49.410263), (8.676831, 49.41047), (8.676874, 49.410602), (8.676875, 49.410737), (8.676837, 49.410898), (8.676835, 49.411042), (8.676878, 49.411161), (8.676917, 49.411301), (8.676881, 49.411472), (8.676907, 49.411608), (8.676952, 49.411697), (8.677094, 49.411682), (8.677237, 49.411611), (8.677346, 49.411504), (8.677588, 49.411501), (8.67786, 49.411534), (8.67807, 49.411539), (8.678213, 49.411573), (8.678425, 49.411597), (8.678569, 49.411623), (8.678763, 49.411635), (8.678986, 49.411652), (8.67913, 49.411657), (8.679294, 49.411678), (8.679501, 49.411722), (8.679755, 49.411755), (8.67998, 49.411737), (8.680232, 49.41181), (8.680415, 49.411906), (8.680634, 49.411961), (8.680899, 49.412028), (8.68108, 49.412064), (8.68122, 49.412108), (8.681402, 49.412143), (8.681631, 49.412194), (8.681865, 49.412229), (8.682295, 49.412283), (8.682575, 49.412336), (8.682784, 49.412352), (8.682962, 49.412405), (8.683122, 49.412451), (8.683353, 49.412465), (8.683524, 49.412451), (8.683676, 49.412441), (8.683845, 49.412464), (8.684013, 49.412483), (8.684218, 49.412517), (8.684382, 49.4125), (8.684546, 49.412487), (8.684788, 49.412525), (8.685054, 49.412567), (8.685306, 49.412622), (8.685511, 49.412642), (8.68576, 49.412665), (8.685968, 49.412705), (8.686136, 49.412704), (8.686355, 49.412736), (8.686512, 49.41269), (8.686635, 49.412641), (8.686775, 49.412654), (8.687034, 49.41272), (8.687276, 49.412807), (8.687504, 49.412827), (8.68766, 49.412817), (8.687994, 49.412794), (8.688094, 49.412861), (8.688259, 49.412899), (8.688505, 49.412952), (8.688592, 49.413039), (8.6888, 49.413089), (8.689075, 49.413153), (8.689318, 49.413113), (8.689532, 49.413119), (8.689722, 49.413106), (8.689891, 49.4131), (8.690111, 49.413119), (8.690302, 49.413108), (8.690508, 49.413119), (8.69073, 49.413148), (8.690949, 49.413125), (8.691093, 49.413123), (8.691247, 49.413113), (8.691495, 49.413084), (8.691659, 49.413059), (8.691851, 49.413091), (8.692036, 49.413132), (8.692198, 49.413147), (8.69236, 49.413081), (8.69234, 49.412956), (8.69235, 49.412806), (8.692361, 49.412671), (8.69241, 49.412543), (8.692441, 49.412436), (8.692483, 49.4123), (8.692509, 49.41217), (8.692545, 49.412044), (8.692559, 49.411921), (8.692601, 49.411808), (8.692666, 49.411681), (8.692657, 49.411577), (8.692531, 49.411443), (8.692345, 49.411358), (8.692096, 49.411321), (8.691999, 49.411238), (8.691929, 49.41115), (8.692002, 49.411037), (8.69209, 49.410918), (8.692119, 49.410805), (8.692113, 49.4107), (8.692199, 49.410619), (8.692311, 49.410488), (8.692185, 49.410235), (8.692276, 49.410119), (8.692397, 49.410034), (8.692558, 49.4099), (8.692671, 49.409702), (8.692604, 49.409512), (8.692486, 49.40938), (8.692528, 49.409292), (8.692361, 49.409224), (8.692171, 49.409151), (8.692061, 49.409208), (8.692019, 49.409118), (8.692122, 49.409057), (8.692121, 49.408937), (8.692378, 49.408396), (8.692393, 49.408224), (8.692373, 49.408124), (8.692415, 49.408034), (8.692396, 49.407865), (8.692423, 49.407678), (8.692381, 49.40758), (8.692349, 49.407489), (8.692394, 49.407337), (8.692286, 49.407226), (8.692124, 49.407159), (8.691974, 49.407108), (8.691797, 49.407041), (8.691613, 49.406993), (8.691406, 49.406962), (8.691146, 49.406938), (8.69087, 49.406985), (8.69062, 49.406934), (8.690379, 49.406845), (8.690165, 49.406782), (8.690024, 49.406724), (8.689848, 49.406669), (8.689603, 49.406619), (8.689409, 49.406509), (8.689218, 49.406385), (8.689142, 49.406228), (8.689137, 49.406077), (8.689123, 49.405938), (8.689036, 49.405848), (8.688873, 49.405829), (8.688744, 49.405888), (8.688541, 49.405862), (8.688392, 49.405798), (8.688213, 49.405746), (8.688043, 49.405745), (8.687907, 49.405651), (8.687736, 49.405579), (8.687577, 49.405562)]
    times = [1562951136.0, 1562951150.0, 1562951155.0, 1562951160.0, 1562951165.0, 1562951170.0, 1562951175.0, 1562951180.0, 1562951191.0, 1562951196.0, 1562951206.0, 1562951211.0, 1562951216.0, 1562951221.0, 1562951226.0, 1562951231.0, 1562951236.0, 1562951241.0, 1562951246.0, 1562951251.0, 1562951256.0, 1562951261.0, 1562951266.0, 1562951273.0, 1562951278.0, 1562951283.0, 1562951288.0, 1562951294.0, 1562951299.0, 1562951304.0, 1562951309.0, 1562951314.0, 1562951319.0, 1562951324.0, 1562951329.0, 1562951334.0, 1562951339.0, 1562951344.0, 1562951349.0, 1562951354.0, 1562951361.0, 1562951366.0, 1562951372.0, 1562951377.0, 1562951382.0, 1562951387.0, 1562951392.0, 1562951397.0, 1562951402.0, 1562951409.0, 1562951487.0, 1562951492.0, 1562951497.0, 1562951502.0, 1562951547.0, 1562951552.0, 1562951600.0, 1562951606.0, 1562951611.0, 1562951616.0, 1562951621.0, 1562951626.0, 1562951631.0, 1562951636.0, 1562951641.0, 1562951646.0, 1562951651.0, 1562951656.0, 1562951661.0, 1562951666.0, 1562951671.0, 1562951676.0, 1562951681.0, 1562951686.0, 1562951691.0, 1562951696.0, 1562951701.0, 1562951722.0, 1562951727.0, 1562951732.0, 1562951738.0, 1562951743.0, 1562951748.0, 1562951753.0, 1562951758.0, 1562951763.0, 1562951768.0, 1562951773.0, 1562951778.0, 1562951783.0, 1562951788.0, 1562951793.0, 1562951798.0, 1562951807.0, 1562951813.0, 1562951818.0, 1562951823.0, 1562951828.0, 1562951833.0, 1562951838.0, 1562951843.0, 1562951848.0, 1562951853.0, 1562951858.0, 1562951864.0, 1562951869.0, 1562951874.0, 1562951879.0, 1562951884.0, 1562951889.0, 1562951894.0, 1562951899.0, 1562951904.0, 1562951909.0, 1562951914.0, 1562951919.0, 1562951924.0, 1562951929.0, 1562951934.0, 1562951939.0, 1562951944.0, 1562951949.0, 1562951954.0, 1562951959.0, 1562951964.0, 1562951969.0, 1562951974.0, 1562951979.0, 1562951984.0, 1562951989.0, 1562951995.0, 1562952000.0, 1562952005.0, 1562952010.0, 1562952015.0, 1562952020.0, 1562952025.0, 1562952030.0, 1562952035.0, 1562952040.0, 1562952045.0, 1562952052.0, 1562952057.0, 1562952062.0, 1562952067.0, 1562952072.0, 1562952077.0, 1562952085.0, 1562952090.0, 1562952095.0, 1562952100.0, 1562952105.0, 1562952110.0, 1562952115.0, 1562952120.0, 1562952125.0, 1562952130.0, 1562952135.0, 1562952140.0, 1562952145.0, 1562952150.0, 1562952155.0, 1562952160.0, 1562952165.0, 1562952170.0, 1562952177.0, 1562952182.0, 1562952187.0, 1562952192.0, 1562952197.0, 1562952202.0, 1562952207.0, 1562952212.0, 1562952217.0, 1562952222.0, 1562952227.0, 1562952232.0, 1562952237.0, 1562952242.0, 1562952247.0, 1562952252.0, 1562952257.0, 1562952262.0, 1562952267.0, 1562952272.0, 1562952279.0, 1562952284.0, 1562952289.0, 1562952294.0, 1562952299.0, 1562952304.0, 1562952314.0, 1562952319.0, 1562952324.0, 1562952329.0, 1562952334.0, 1562952339.0, 1562952344.0, 1562952349.0, 1562952354.0, 1562952361.0, 1562952366.0, 1562952371.0, 1562952382.0, 1562952408.0, 1562952433.0, 1562952441.0, 1562952446.0, 1562952451.0, 1562952457.0, 1562952462.0, 1562952467.0, 1562952472.0, 1562952478.0, 1562952483.0, 1562952488.0, 1562952493.0, 1562952498.0, 1562952504.0, 1562952509.0, 1562952514.0, 1562952519.0, 1562952524.0, 1562952529.0, 1562952534.0, 1562952539.0, 1562952544.0, 1562952549.0, 1562952554.0, 1562952559.0, 1562952564.0, 1562952569.0, 1562952574.0, 1562952579.0, 1562952584.0, 1562952593.0, 1562952598.0, 1562952603.0, 1562952608.0, 1562952613.0, 1562952618.0, 1562952623.0, 1562952628.0, 1562952633.0, 1562952638.0]
    # track = Track(times=times, coordinates=coordinates)
    result = find_gems(1000, times, coordinates)
    found_section = result[0]
    start_index = result[1]
    end_index = result[2]
    velocity_found = result[3]
    assert found_section is True
    assert start_index == 105
    assert end_index == 146
    assert velocity_found == 4.7462154803970185

    result = find_gems(5000, times, coordinates)
    assert result[0] is False