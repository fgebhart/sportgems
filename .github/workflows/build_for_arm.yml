name: Build ARMv7

on: [push]

jobs:
  build_arm7:
    name: Build ARMv7
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Python
        run: |
          cd /tmp
          wget https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tgz
          tar -xvzf Python-3.8.6.tgz
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install apt packages
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt update && sudo apt install gcc-arm-linux-gnueabihf python3 python3-pip wget
      - name: fix lsb_release issue
        run: |
          cat /usr/bin/lsb_release
          ls -l /usr/bin/python3
          # sudo rm /usr/bin/lsb_release
          sudo ln -s /usr/bin/python3.6 /usr/bin/python3
          ls -l /usr/bin/python3

      - name: Build Python for ARM
        env:
          HOSTPYTHON: /tmp/depsBuild/pythonhost/python
          CONFIGURE_PREFIX: /tmp/python
          EXTRACTED_PYTHON: /tmp/Python-3.8.6
          TARGET_PYTHON: /tmp/Python-3.8.6/target
        run: |
          cd $EXTRACTED_PYTHON
          CC=arm-linux-gnueabihf-gcc CXX=arm-linux-gnueabihf-g++ AR=arm-linux-gnueabihf-ar \
            RANLIB=arm-linux-gnueabihf-ranlib \
            ./configure --host=arm-linux-gnueabihf --target=arm-linux-gnueabihf \
            --build=x86_64-linux-gnu --prefix=$CONFIGURE_PREFIX \
            --disable-ipv6 ac_cv_file__dev_ptmx=no ac_cv_file__dev_ptc=no \
            ac_cv_have_long_long_format=yes --enable-shared

          make HOSTPYTHON=$HOSTPYTHON \
            BLDSHARED="arm-linux-gnueabihf-gcc -shared" CROSS-COMPILE=arm-linux-gnueabihf- \
            CROSS_COMPILE_TARGET=yes HOSTARCH=arm-linux BUILDARCH=arm-linux-gnueabihf

          make altinstall HOSTPYTHON=$HOSTPYTHON \
            BLDSHARED="arm-linux-gnueabihf-gcc -shared" CROSS-COMPILE=arm-linux-gnueabihf- \
            CROSS_COMPILE_TARGET=yes HOSTARCH=arm-linux BUILDARCH=arm-linux-gnueabihf \
            prefix=$TARGET_PYTHON

      - name: Install latest rust
        run: |
          wget https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init
          chmod +x rustup-init
          printf '%s\n' 1 | ./rustup-init
          source $HOME/.cargo/env
          rustup target add armv7-unknown-linux-gnueabihf

      - name: Install maturin
        run: |
          pip3 install maturin wheel

      - name: Build for host platform
        run: |
          maturin build

      - name: Build using cargo
        run: |
          PYO3_CROSS_INCLUDE_DIR="$TARGET_PYTHON/include" PYO3_CROSS_LIB_DIR="$TARGET_PYTHON/lib" cargo build --target=armv7-unknown-linux-gnueabihf --release

      - name: Build ARM wheel
        env:
          TARGET_PYTHON: /tmp/Python-3.8.6/target
        run: |
          PYO3_CROSS_INCLUDE_DIR="$TARGET_PYTHON/include" PYO3_CROSS_LIB_DIR="$TARGET_PYTHON/lib" maturin build --target=armv7-unknown-linux-gnueabihf --release --manylinux=off

      - name: Verify Target is present
        run: |
          ls -l target/wheels
          ls -l target/sportgems-*-manylinux1_armv7l.whl
